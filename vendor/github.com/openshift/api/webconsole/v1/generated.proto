
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package github.com.openshift.api.webconsole.v1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";
import "k8s.io/apimachinery/pkg/util/intstr/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1";

// CertInfo relates a certificate with a private key
message CertInfo {
  // CertFile is a file containing a PEM-encoded certificate
  optional string certFile = 1;

  // KeyFile is a file containing a PEM-encoded private key for the certificate specified by CertFile
  optional string keyFile = 2;
}

// ClusterInfo holds information the web console needs to talk to the cluster such as master public URL and
// metrics public URL
message ClusterInfo {
  // ConsolePublicURL is where you can find the web console server (TODO do we really need this?)
  optional string consolePublicURL = 1;

  // MasterPublicURL is how the web console can access the OpenShift v1 server
  optional string masterPublicURL = 2;

  // LoggingPublicURL is the public endpoint for logging (optional)
  optional string loggingPublicURL = 3;

  // MetricsPublicURL is the public endpoint for metrics (optional)
  optional string metricsPublicURL = 4;

  // LogoutPublicURL is an optional, absolute URL to redirect web browsers to after logging out of the web
  // console. If not specified, the built-in logout page is shown.
  optional string logoutPublicURL = 5;
}

// ExtensionsConfiguration holds custom script, stylesheets, and properties used for web console customization
message ExtensionsConfiguration {
  // ScriptURLs are URLs to load as scripts when the Web Console loads. The URLs must be accessible from
  // the browser.
  repeated string scriptURLs = 1;

  // StylesheetURLs are URLs to load as stylesheets when the Web Console loads. The URLs must be accessible
  // from the browser.
  repeated string stylesheetURLs = 2;

  // Properties are key(string) and value(string) pairs that will be injected into the console under the
  // global variable OPENSHIFT_EXTENSION_PROPERTIES
  map<string, string> properties = 3;
}

// FeaturesConfiguration defines various feature gates for the web console
message FeaturesConfiguration {
  // InactivityTimeoutMinutes is the number of minutes of inactivity before you are automatically logged out of
  // the web console (optional). If set to 0, inactivity timeout is disabled.
  optional int64 inactivityTimeoutMinutes = 1;

  // ClusterResourceOverridesEnabled indicates that the cluster is configured for overcommit. When set to
  // true, the web console will hide the CPU request, CPU limit, and memory request fields in its editors
  // and skip validation on those fields. The memory limit field will still be displayed.
  optional bool clusterResourceOverridesEnabled = 2;
}

// HTTPServingInfo holds configuration for serving HTTP
message HTTPServingInfo {
  // ServingInfo is the HTTP serving information
  optional ServingInfo servingInfo = 1;

  // MaxRequestsInFlight is the number of concurrent requests allowed to the server. If zero, no limit.
  optional int64 maxRequestsInFlight = 2;

  // RequestTimeoutSeconds is the number of seconds before requests are timed out. The default is 60 minutes, if
  // -1 there is no limit on requests.
  optional int64 requestTimeoutSeconds = 3;
}

// NamedCertificate specifies a certificate/key, and the names it should be served for
message NamedCertificate {
  // Names is a list of DNS names this certificate should be used to secure
  // A name can be a normal DNS name, or can contain leading wildcard segments.
  repeated string names = 1;

  // CertInfo is the TLS cert info for serving secure traffic
  optional CertInfo certInfo = 2;
}

// ServingInfo holds information about serving web pages
message ServingInfo {
  // BindAddress is the ip:port to serve on
  optional string bindAddress = 1;

  // BindNetwork is the type of network to bind to - defaults to "tcp4", accepts "tcp",
  // "tcp4", and "tcp6"
  optional string bindNetwork = 2;

  // CertInfo is the TLS cert info for serving secure traffic.
  // this is anonymous so that we can inline it for serialization
  optional CertInfo certInfo = 3;

  // ClientCA is the certificate bundle for all the signers that you'll recognize for incoming client certificates
  optional string clientCA = 4;

  // NamedCertificates is a list of certificates to use to secure requests to specific hostnames
  repeated NamedCertificate namedCertificates = 5;

  // MinTLSVersion is the minimum TLS version supported.
  // Values must match version names from https://golang.org/pkg/crypto/tls/#pkg-constants
  optional string minTLSVersion = 6;

  // CipherSuites contains an overridden list of ciphers for the server to support.
  // Values must match cipher suite IDs from https://golang.org/pkg/crypto/tls/#pkg-constants
  repeated string cipherSuites = 7;
}

// WebConsoleConfiguration holds the necessary configuration options for serving the web console
message WebConsoleConfiguration {
  // ServingInfo is the HTTP serving information for these assets
  optional HTTPServingInfo servingInfo = 1;

  // ClusterInfo holds information the web console needs to talk to the cluster such as master public URL
  // and metrics public URL
  optional ClusterInfo clusterInfo = 2;

  // Features define various feature gates for the web console
  optional FeaturesConfiguration featureInfo = 3;

  // Extensions define custom scripts, stylesheets, and properties used for web console customization
  optional ExtensionsConfiguration extensions = 4;
}

